openapi: 3.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Credentials:
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
          required: true
      example:
        username: john_smith
        email: john_smith@gmail.com
        password: qwerty
    Error:
      properties:
        status:
          type: integer
          required: true
        message:
          type: string
          required: true
    Token:
      properties:
        token:
          type: string
          required: true
          example: eyJh.eyJzdWIiOiIxMjM0NTY3ODkaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZ
    SimpleBoard:
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          required: true
          example: "My wednesday plan"
        visibility:
          type: string
          enum: [public, private]
    Task:
      properties:
        id:
          type: integer
          required: true
          example: 1
        name:
          type: string
          required: true
          example: Take the rubbish out.
        description:
          type: string
          example: Do it fast, it has been too long.
        column_id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 4
    Column:
      properties:
        id:
          type: integer
          required: true
        name:
          type: string
          required: true
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
          required: true
      example:
        id: 1
        name: To do
        tasks: []
    Board:
      properties:
        id:
          type: integer
          required: true
          example: 1
        name:
          type: string
          required: true
          example: My Wednesday Plan
        visibility:
          type: string
          required: true
          enum: [public, private]
          example: private
        columns:
          type: array
          items:
            $ref: '#/components/schemas/Column'
          required: true
    BoardList:
      properties:
        boards:
          type: array
          items:
            $ref: '#/components/schemas/SimpleBoard'
          required: true
    Permission:
      properties:
        name:
          type: string
          required: true
        description:
          type: string
          required: true
      example:
        name: COLUMN_CREATE
        description: Allows for creating columns
    PermissionList:
      properties:
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          required: true
  responses:
    InvalidRequest:
      description: Returned when request body is invalid, e.g. has no required fields,
        redundant extra fields or is malformed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      examples:
        Invalid request:
          status: 400
          message: "Invalid request body"
    NoToken:
      description: Returned when authentication token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      examples:
        Invalid token:
          status: 401
          message: "No valid token present"

